# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import demo_bank_pb2 as demo__bank__pb2


class CustomerServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCustomer = channel.unary_unary(
                '/demobank.api.CustomerService/GetCustomer',
                request_serializer=demo__bank__pb2.GetCustomerRequest.SerializeToString,
                response_deserializer=demo__bank__pb2.Customer.FromString,
                )


class CustomerServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetCustomer(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CustomerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCustomer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCustomer,
                    request_deserializer=demo__bank__pb2.GetCustomerRequest.FromString,
                    response_serializer=demo__bank__pb2.Customer.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'demobank.api.CustomerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CustomerService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetCustomer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/demobank.api.CustomerService/GetCustomer',
            demo__bank__pb2.GetCustomerRequest.SerializeToString,
            demo__bank__pb2.Customer.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class CasaAccountServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAccount = channel.unary_unary(
                '/demobank.api.CasaAccountService/GetAccount',
                request_serializer=demo__bank__pb2.GetCasaAccountRequest.SerializeToString,
                response_deserializer=demo__bank__pb2.CasaAccount.FromString,
                )


class CasaAccountServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetAccount(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CasaAccountServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccount,
                    request_deserializer=demo__bank__pb2.GetCasaAccountRequest.FromString,
                    response_serializer=demo__bank__pb2.CasaAccount.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'demobank.api.CasaAccountService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CasaAccountService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/demobank.api.CasaAccountService/GetAccount',
            demo__bank__pb2.GetCasaAccountRequest.SerializeToString,
            demo__bank__pb2.CasaAccount.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class DashboardServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDashboard = channel.unary_unary(
                '/demobank.api.DashboardService/GetDashboard',
                request_serializer=demo__bank__pb2.GetDashboardRequest.SerializeToString,
                response_deserializer=demo__bank__pb2.Dashboard.FromString,
                )


class DashboardServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetDashboard(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DashboardServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDashboard': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDashboard,
                    request_deserializer=demo__bank__pb2.GetDashboardRequest.FromString,
                    response_serializer=demo__bank__pb2.Dashboard.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'demobank.api.DashboardService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DashboardService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetDashboard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/demobank.api.DashboardService/GetDashboard',
            demo__bank__pb2.GetDashboardRequest.SerializeToString,
            demo__bank__pb2.Dashboard.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
